#!/usr/bin/env python3
# This file is placed in the Public Domain.

name = "opbot"
wd = "/var/lib/%s/" % name
md = "/var/lib/%s/mod/" % name

import os, readline, shutil, sys

from op.dbs import last
from op.hdl import Console, Core
from op.obj import Object, format, load, register, save, update
from op.prs import parse
from op.run import cfg, parse_cli
from op.trm import termsave, termreset
from op.thr import launch
from op.utl import privileges

class Basic(Console):

    def direct(self, txt):
        print(txt)

def exec(main):
    termsave()
    try:
        main()
    except KeyboardInterrupt:
        print("")
    except PermissionError as ex:
        print(str(ex))
    finally:
        termreset()

def docfg(event):
    from opbot.irc import Cfg
    c = Cfg()
    last(c)
    if event.prs and not event.prs.sets:
        return event.reply(format(c, skip=["username", "realname"]))
    update(c, event.prs.sets)
    save(c)
    event.reply("ok")

def main():
    parse_cli()
    if not cfg.op("r"):
        cfg.wd = wd = os.path.expanduser("~/.%s" % name)
        cfg.md = md = os.path.join(cfg.wd, "mod")
    else:
        privileges(name)
    if cfg.op("s"):
        save(cfg)
    if cfg.op("l"):
        last(cfg)
    h = Core()
    h.pkgs = [name,]
    h.fromdir(cfg.md)
    h.walk(name)
    if cfg.txt:
        h.add("cfg", docfg)
        return h.cmd(cfg.otxt)
    if cfg.op("c"):
        c = Console()
        c.clone(h)
        c.start()
    if cfg.op("i"):
        cfg.mods += ",irc"
    h.start()
    h.init(cfg.mods)
    if cfg.op("cw"):
        h.wait()

exec(main)
